{"version":3,"sources":["redux/DirectionsWidget/directionsWidget.types.js","redux/DirectionsWidget/directionsWidget.reducer.js","redux/rootReducer.js","redux/store.js","components/Common/Input/Input.js","components/Common/Button/Button.js","components/Common/Pill/Pill.js","components/DirectionsWidget/DirectionsWidget.js","redux/DirectionsWidget/directionsWidget.actions.js","components/App.js","index.js"],"names":["TOGGLE_DESTINATION_OPTIONS_EXPAND_COLLAPSE","SWAP_STARTING_POINT_AND_DESTINATION_VALUES","HANDLE_DESTINATION_OPTIONS_INPUT_CHANGE","initialState","destinationOptionsAreExpanded","startingPoint","destination","destinationSecondary","directionsWidgetReducer","state","action","type","types","payload","rootReducer","combineReducers","directionsWidget","store","createStore","Input","handleInputChange","event","props","inputType","target","value","className","this","icon","faEllipsisV","placeholder","onChange","additionalInputButtonIsVisible","onClick","additionalInputButtonAction","additionalInputButtonIcon","PureComponent","defaultProps","Button","name","isRotated","isIconButon","handleClick","disabled","rotation","Pill","isSelected","setState","prevState","DirectionsWidget","faArrowLeft","faDotCircle","handleDestinationOptionInputChange","faCompass","faMapMarkerAlt","faTimesCircle","toggleDestinationOptionsExpandCollapse","farCompass","faExchangeAlt","swapStartingPointAndDestinationValues","faPlusCircle","connect","dispatch","field","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcf3ef2f.chunk.js","sourcesContent":["export const TOGGLE_DESTINATION_OPTIONS_EXPAND_COLLAPSE = \"TOGGLE_DESTINATION_OPTIONS_EXPAND_COLLAPSE\";\nexport const SWAP_STARTING_POINT_AND_DESTINATION_VALUES = \"SWAP_STARTING_POINT_AND_DESTINATION_VALUES\";\nexport const HANDLE_DESTINATION_OPTIONS_INPUT_CHANGE = \"HANDLE_DESTINATION_OPTIONS_INPUT_CHANGE\";\n","import * as types from './directionsWidget.types'\n\nconst initialState = {\n  destinationOptionsAreExpanded: false,\n  startingPoint: \"Current Location\",\n  destination: \"\",\n  destinationSecondary: \"\"\n}\n\nconst directionsWidgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TOGGLE_DESTINATION_OPTIONS_EXPAND_COLLAPSE:\n      let startingPoint = state.startingPoint;\n      let destination = state.destination;\n      let destinationSecondary = state.destinationSecondary;\n\n      if (state.destinationOptionsAreExpanded) {\n        startingPoint = \"Current Location\";\n        destination = \"\";\n        destinationSecondary = \"\";\n      }\n\n      return {\n        ...state,\n        destinationOptionsAreExpanded: !state.destinationOptionsAreExpanded,\n        startingPoint,\n        destination,\n        destinationSecondary\n      }\n    case types.SWAP_STARTING_POINT_AND_DESTINATION_VALUES:\n      return {\n        ...state,\n        startingPoint: state.destination,\n        destination: state.startingPoint\n      }\n    case types.HANDLE_DESTINATION_OPTIONS_INPUT_CHANGE:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default: return state\n  }\n}\n\nexport default directionsWidgetReducer\n","import { combineReducers } from 'redux';\n// reducers\nimport directionsWidgetReducer from './DirectionsWidget/directionsWidget.reducer';\n\nconst rootReducer = combineReducers({\n    directionsWidget: directionsWidgetReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React, { PureComponent } from 'react'\nimport { string, shape, bool, func } from 'prop-types'\n// icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\n// styles\nimport './Input.scss';\n\nclass Input extends PureComponent {\n  static propTypes = {\n    inputType: string.isRequired,\n    placeholder: string,\n    icon: shape(),\n    additionalInputButtonIsVisible: bool,\n    additionalInputButtonIcon: shape(),\n    additionalInputButtonAction: func,\n    value: string,\n    handleInputChange: func.isRequired\n  }\n\n  static defaultProps = {\n    placeholder: '',\n    icon: null,\n    additionalInputButtonIsVisible: false,\n    additionalInputButtonIcon: {},\n    additionalInputButtonAction: null,\n    value: ''\n  }\n\n  handleInputChange = event => {\n    this.props.handleInputChange(this.props.inputType, event.target.value)\n  }\n\n  render() {\n    return (\n      <div className='input-container'>\n        {this.props.icon && this.props.inputType !== 'startingPoint' && <FontAwesomeIcon icon={faEllipsisV} className='input-icon-trail' />}\n        {this.props.icon && <FontAwesomeIcon icon={this.props.icon} className='input-icon' />}\n        <input\n          type='text'\n          placeholder={this.props.placeholder}\n          value={this.props.value}\n          onChange={this.handleInputChange}\n        />\n        {this.props.additionalInputButtonIsVisible &&\n          <div className='input-additional-button-container'>\n            <button\n              className='input-additional-button'\n              onClick={this.props.additionalInputButtonAction}\n            >\n              {this.props.additionalInputButtonAction &&\n                <FontAwesomeIcon\n                  icon={this.props.additionalInputButtonIcon}\n                  className='input-icon'\n                />\n              }\n            </button>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default Input","import React from 'react'\nimport { string, shape, bool, func } from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// styles\nimport './Button.scss';\n\nconst Button = ({ name, icon, isRotated = false, isIconButon = false, handleClick = null, disabled = false }) => {\n  return (\n    <button className={`custom-button ${isIconButon ? \"icon-button\" : \"\"}`} onClick={handleClick} disabled={disabled}>\n      <FontAwesomeIcon icon={icon} className='input-icon' rotation={isRotated ? 90 : null} />\n      {name}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  name: string.isRequired,\n  icon: shape().isRequired,\n  isRotated: bool,\n  isIconButon: bool,\n  handleClick: func\n}\n\nexport default Button\n","import React, { PureComponent } from 'react'\nimport { string } from 'prop-types'\n// styles \nimport './Pill.scss';\n\nclass Pill extends PureComponent {\n  static propTypes = {\n    name: string.isRequired\n  }\n\n  state = {\n    isSelected: false\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({ isSelected: !prevState.isSelected }))\n  }\n\n  render() {\n    return (\n      <button\n        className={`pill ${this.state.isSelected ? 'pill--selected' : ''} `}\n        onClick={this.handleClick}\n      >\n        {this.props.name}\n      </button>\n    )\n  }\n}\n\nexport default Pill","import React, { PureComponent } from 'react'\nimport { func, shape, bool } from 'prop-types'\nimport { connect } from 'react-redux';\n// components \nimport Input from '../Common/Input/Input';\nimport Button from '../Common/Button/Button';\nimport Pill from '../Common/Pill/Pill';\n// icons \nimport { faDotCircle, faMapMarkerAlt, faExchangeAlt, faArrowLeft, faPlusCircle, faCompass } from '@fortawesome/free-solid-svg-icons';\nimport { faCompass as farCompass, faTimesCircle } from '@fortawesome/free-regular-svg-icons';\n// styles \nimport './DirectionsWidget.scss';\n// actions\nimport * as directionsWidget from '../../redux/DirectionsWidget/directionsWidget.actions';\n\nclass DirectionsWidget extends PureComponent {\n  static propTypes = {\n    toggleDestinationOptionsExpandCollapse: func.isRequired,\n    swapStartingPointAndDestinationValues: func.isRequired,\n    directionsWidget: shape({\n      destinationOptionsAreExpanded: bool\n    })\n  }\n\n  state = {}\n\n  render() {\n    const { destinationOptionsAreExpanded, startingPoint, destination, destinationSecondary } = this.props.directionsWidget\n\n    return (\n      <div className='widget-container'>\n        <div className='directions-widget-container'>\n          <div className='button-container button-container--padded-top-s'>\n            <Button name='' icon={faArrowLeft} isIconButon />\n          </div>\n          <div className='directions-widget-inputs-container'>\n            <Input\n              inputType=\"startingPoint\"\n              placeholder=\"Choose starting point\"\n              icon={faDotCircle}\n              additionalInputButtonIsVisible={destinationOptionsAreExpanded}\n              value={startingPoint}\n              handleInputChange={this.props.handleDestinationOptionInputChange}\n            />\n            <Input\n              inputType=\"destination\"\n              placeholder=\"Choose destination\"\n              icon={destinationOptionsAreExpanded ? faCompass : faMapMarkerAlt}\n              additionalInputButtonIsVisible={destinationOptionsAreExpanded}\n              additionalInputButtonIcon={faTimesCircle}\n              additionalInputButtonAction={this.props.toggleDestinationOptionsExpandCollapse}\n              value={destination}\n              handleInputChange={this.props.handleDestinationOptionInputChange}\n            />\n            {destinationOptionsAreExpanded &&\n              <Input\n                inputType=\"destinationSecondary\"\n                placeholder=\"Choose destination\"\n                icon={farCompass}\n                additionalInputButtonIsVisible={destinationOptionsAreExpanded}\n                additionalInputButtonIcon={faTimesCircle}\n                additionalInputButtonAction={this.props.toggleDestinationOptionsExpandCollapse}\n                value={destinationSecondary}\n                handleInputChange={this.props.handleDestinationOptionInputChange}\n\n              />\n            }\n          </div>\n          {!destinationOptionsAreExpanded &&\n            <div className='button-container button-container--centered'>\n              <Button\n                name=''\n                icon={faExchangeAlt}\n                isRotated\n                isIconButon\n                handleClick={this.props.swapStartingPointAndDestinationValues}\n              />\n            </div>\n          }\n        </div>\n        <div className='button-container button-container--padded-left-l'>\n          <Button\n            name='Add destination'\n            icon={faPlusCircle}\n            handleClick={this.props.toggleDestinationOptionsExpandCollapse}\n            disabled={destinationOptionsAreExpanded}\n          />\n        </div>\n        <div className='pills-container'>\n          <Pill name='Bus Stops' />\n          <Pill name='Attractions' />\n          <Pill name='Parks' />\n          <Pill name='Museums' />\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    directionsWidget: state.directionsWidget\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return (\n    {\n      toggleDestinationOptionsExpandCollapse: () => dispatch(directionsWidget.toggleDestinationOptionsExpandCollapse()),\n      swapStartingPointAndDestinationValues: () => dispatch(directionsWidget.swapStartingPointAndDestinationValues()),\n      handleDestinationOptionInputChange: (field, value) => dispatch(directionsWidget.handleDestinationOptionInputChange(field, value))\n    }\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DirectionsWidget);","import * as types from './directionsWidget.types'\n\nexport const toggleDestinationOptionsExpandCollapse = () => {\n  return { type: types.TOGGLE_DESTINATION_OPTIONS_EXPAND_COLLAPSE }\n};\n\nexport const swapStartingPointAndDestinationValues = () => {\n  return { type: types.SWAP_STARTING_POINT_AND_DESTINATION_VALUES }\n};\n\nexport const handleDestinationOptionInputChange = (field, value) => {\n  return {\n    type: types.HANDLE_DESTINATION_OPTIONS_INPUT_CHANGE,\n    payload: { [field]: value }\n  }\n}","import React, { PureComponent } from 'react'\n// import PropTypes from 'prop-types'\n// components\nimport DirectionsWidget from './DirectionsWidget/DirectionsWidget';\n// styles\nimport './App.scss';\n\nclass App extends PureComponent {\n  static propTypes = {}\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <DirectionsWidget />\n        <h1>Row1</h1>\n        <h1>Row2</h1>\n        <h1>Row3</h1>\n        <h1>Row4</h1>\n        <h1>Row5</h1>\n        <h1>Row6</h1>\n      </div>\n    );\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n// redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// main\nimport App from '../src/components/App';\n// styles\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}